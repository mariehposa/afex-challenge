[{"C:\\Users\\HP\\Desktop\\iCode\\afex-challenge\\client\\src\\reportWebVitals.js":"1","C:\\Users\\HP\\Desktop\\iCode\\afex-challenge\\client\\src\\App.js":"2","C:\\Users\\HP\\Desktop\\iCode\\afex-challenge\\client\\src\\components\\order\\order.js":"3","C:\\Users\\HP\\Desktop\\iCode\\afex-challenge\\client\\src\\components\\order\\card.js":"4","C:\\Users\\HP\\Desktop\\iCode\\afex-challenge\\client\\src\\data\\data.js":"5","C:\\Users\\HP\\Desktop\\iCode\\afex-challenge\\client\\src\\components\\order\\styles.js":"6","C:\\Users\\HP\\Desktop\\iCode\\afex-challenge\\client\\src\\components\\trade\\trade.js":"7","C:\\Users\\HP\\Desktop\\iCode\\afex-challenge\\client\\src\\components\\trade\\styles.js":"8","C:\\Users\\HP\\Desktop\\iCode\\afex-challenge\\client\\src\\index.js":"9"},{"size":362,"mtime":1606855881096,"results":"10","hashOfConfig":"11"},{"size":320,"mtime":1607011440937,"results":"12","hashOfConfig":"11"},{"size":12113,"mtime":1607007429114,"results":"13","hashOfConfig":"11"},{"size":642,"mtime":1607068799834,"results":"14","hashOfConfig":"11"},{"size":2580,"mtime":1606930985940,"results":"15","hashOfConfig":"11"},{"size":3782,"mtime":1607021747729,"results":"16","hashOfConfig":"11"},{"size":4288,"mtime":1607066378511,"results":"17","hashOfConfig":"11"},{"size":2880,"mtime":1607067179287,"results":"18","hashOfConfig":"11"},{"size":589,"mtime":1606915085589,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"jlt3f3",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\HP\\Desktop\\iCode\\afex-challenge\\client\\src\\reportWebVitals.js",[],"C:\\Users\\HP\\Desktop\\iCode\\afex-challenge\\client\\src\\App.js",[],"C:\\Users\\HP\\Desktop\\iCode\\afex-challenge\\client\\src\\components\\order\\order.js",["40"],"import React, { useState } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { BuyCard, SellCard } from \"./card\";\r\nimport {\r\n  allBuy,\r\n  allSell,\r\n  fetcBuy,\r\n  fetcSell,\r\n  scocBuy,\r\n  scocSell,\r\n  smazBuy,\r\n  smazSell,\r\n  sprlBuy,\r\n  sprlSell,\r\n  ssbsBuy,\r\n  ssgmSell,\r\n  ssgmBuy,\r\n} from \"../../data/data\";\r\nimport {\r\n  StyledOverall,\r\n  StyledAll,\r\n  StyledDiv,\r\n  StyledNav,\r\n  StyledSelect,\r\n  InnerDiv,\r\n  SelectCover,\r\n  StyledFNav,\r\n  StyledOrder,\r\n  StyledAllOrder,\r\n  StyledTable,\r\n  StyledRow,\r\n  NoDataStyle\r\n} from \"./styles\";\r\nimport envelope from \"../../images/envelope.svg\";\r\n\r\nexport default function Order() {\r\n  // const [length, setLength] = useState(3);\r\n  // console.log(allSell)\r\n\r\n  // function handleChange(e) {\r\n  //     setLength({value: e.target.value});\r\n  // }\r\n\r\n  return (\r\n    <StyledOverall>\r\n      <StyledAll>\r\n        <StyledDiv>\r\n          <InnerDiv>\r\n            <p>Market:</p>\r\n            <div>\r\n              <StyledFNav to=\"/\">Spot</StyledFNav>\r\n            </div>\r\n          </InnerDiv>\r\n          <InnerDiv>\r\n            <p>Boards:</p>\r\n            <div>\r\n              <StyledNav to=\"/\">all</StyledNav>\r\n              <StyledNav to=\"/ssbs\">ssbs</StyledNav>\r\n              <StyledNav to=\"/ssgm\">ssgm</StyledNav>\r\n              <StyledNav to=\"/smaz\">smaz</StyledNav>\r\n              <StyledNav to=\"/cexp\">cexp</StyledNav>\r\n              <StyledNav to=\"/sprl\">sprl</StyledNav>\r\n              <StyledNav to=\"/scoc\">scoc</StyledNav>\r\n              <StyledNav to=\"/fetc\">fetc</StyledNav>\r\n            </div>\r\n          </InnerDiv>\r\n        </StyledDiv>\r\n\r\n        <SelectCover>\r\n          <StyledSelect>\r\n            <option value=\"3\">3</option>\r\n            <option value=\"5\">5</option>\r\n            <option value=\"10\">10</option>\r\n            <option value=\"20\">20</option>\r\n            <option value=\"20\">30</option>\r\n            <option value=\"20\">50</option>\r\n            <option value=\"20\">100</option>\r\n          </StyledSelect>\r\n        </SelectCover>\r\n      </StyledAll>\r\n\r\n      <>\r\n        <Route exact path=\"/\" component={All} />\r\n        <Route path=\"/ssbs\" component={Ssbs} />\r\n        <Route path=\"/ssgm\" component={Ssgm} />\r\n        <Route path=\"/smaz\" component={Smaz} />\r\n        <Route path=\"/cexp\" component={Cexp} />\r\n        <Route path=\"/sprl\" component={Sprl} />\r\n        <Route path=\"/scoc\" component={Scoc} />\r\n        <Route path=\"/fetc\" component={Fetc} />\r\n      </>\r\n    </StyledOverall>\r\n  );\r\n}\r\n\r\nexport function All() {\r\n  return (\r\n    <StyledAllOrder>\r\n      <StyledOrder>\r\n        <p>Buy Orders</p>\r\n        <StyledTable>\r\n            <thead>\r\n                <StyledRow>\r\n                    <th>Security</th>\r\n                    <th>Qty</th>\r\n                    <th>Bid price</th>\r\n                    <th></th>\r\n                </StyledRow>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {allBuy.map((data) => (\r\n                <BuyCard key={data.id} data={data} />\r\n                ))}\r\n            </tbody>\r\n        </StyledTable>\r\n      </StyledOrder>\r\n      <StyledOrder>\r\n        <p>Sell Orders</p>\r\n        <StyledTable>\r\n            <thead>\r\n                <StyledRow>\r\n                    <th>Security</th>\r\n                    <th>Qty</th>\r\n                    <th>Offer price</th>\r\n                    <th></th>\r\n                </StyledRow>\r\n            </thead>\r\n\r\n            <tbody>\r\n                {allSell.map((data) => (\r\n                <SellCard key={data.id} data={data} />\r\n                ))}\r\n            </tbody>\r\n        </StyledTable>\r\n      </StyledOrder>\r\n    </StyledAllOrder>\r\n  );\r\n}\r\n\r\n\r\nexport function Ssbs() {\r\n  return (\r\n    <StyledAllOrder>\r\n      <StyledOrder>\r\n        <p>Buy Orders</p>\r\n        <StyledTable>\r\n            <thead>\r\n                <StyledRow>\r\n                    <th>Security</th>\r\n                    <th>Qty</th>\r\n                    <th>Bid price</th>\r\n                    <th></th>\r\n                </StyledRow>\r\n            </thead>\r\n            \r\n            <tbody>\r\n                {ssbsBuy.map((data) => (\r\n                <BuyCard key={data.id} data={data} />\r\n                ))}\r\n            </tbody>\r\n        </StyledTable>\r\n      </StyledOrder>\r\n      <StyledOrder>\r\n        <p>Sell Orders</p>\r\n        <StyledTable>\r\n            <thead>\r\n                <StyledRow>\r\n                    <th>Security</th>\r\n                    <th>Qty</th>\r\n                    <th>Offer price</th>\r\n                    <th></th>\r\n                </StyledRow>\r\n            </thead>\r\n            \r\n            <tbody>\r\n                <NoDataStyle>\r\n                    <img src={envelope} alt=\"no data\" />\r\n                    <p>No data</p>\r\n                </NoDataStyle>\r\n            </tbody>\r\n        </StyledTable>\r\n      </StyledOrder>\r\n    </StyledAllOrder>\r\n  );\r\n}\r\n\r\nexport function Ssgm() {\r\n    return (\r\n    <StyledAllOrder>\r\n      <StyledOrder>\r\n        <p>Buy Orders</p>\r\n        <StyledTable>\r\n            <thead>\r\n                <StyledRow>\r\n                    <th>Security</th>\r\n                    <th>Qty</th>\r\n                    <th>Bid price</th>\r\n                    <th></th>\r\n                </StyledRow>\r\n            </thead>\r\n            \r\n            <tbody>\r\n                {ssgmBuy.map((data) => (\r\n                <BuyCard key={data.id} data={data} />\r\n                ))}\r\n            </tbody>\r\n        </StyledTable>\r\n      </StyledOrder>\r\n      <StyledOrder>\r\n        <p>Sell Orders</p>\r\n        <StyledTable>\r\n            <thead>\r\n                <StyledRow>\r\n                    <th>Security</th>\r\n                    <th>Qty</th>\r\n                    <th>Offer price</th>\r\n                    <th></th>\r\n                </StyledRow>\r\n            </thead>\r\n            \r\n            <tbody>\r\n                {ssgmSell.map((data) => (\r\n                <SellCard key={data.id} data={data} />\r\n                ))}\r\n            </tbody>\r\n        </StyledTable>\r\n      </StyledOrder>\r\n    </StyledAllOrder>\r\n  );\r\n}\r\nexport function Smaz() {\r\n  return (\r\n      <StyledAllOrder>\r\n      <StyledOrder>\r\n        <p>Buy Orders</p>\r\n        <StyledTable>\r\n            <thead>\r\n                <StyledRow>\r\n                    <th>Security</th>\r\n                    <th>Qty</th>\r\n                    <th>Bid price</th>\r\n                    <th></th>\r\n                </StyledRow>\r\n            </thead>\r\n            \r\n            <tbody>\r\n                {smazBuy.map((data) => (\r\n                <BuyCard key={data.id} data={data} />\r\n                ))}\r\n            </tbody>\r\n        </StyledTable>\r\n      </StyledOrder>\r\n      <StyledOrder>\r\n        <p>Sell Orders</p>\r\n        <StyledTable>\r\n            <thead>\r\n                <StyledRow>\r\n                    <th>Security</th>\r\n                    <th>Qty</th>\r\n                    <th>Offer price</th>\r\n                    <th></th>\r\n                </StyledRow>\r\n            </thead>\r\n            \r\n            <tbody>\r\n                {smazSell.map((data) => (\r\n                <SellCard key={data.id} data={data} />\r\n                ))}\r\n            </tbody>\r\n        </StyledTable>\r\n      </StyledOrder>\r\n    </StyledAllOrder>\r\n  );\r\n}\r\n\r\nexport function Cexp() {\r\n  return (\r\n      <StyledAllOrder>\r\n      <StyledOrder>\r\n        <p>Buy Orders</p>\r\n        <StyledTable>\r\n            <thead>\r\n                <StyledRow>\r\n                    <th>Security</th>\r\n                    <th>Qty</th>\r\n                    <th>Bid price</th>\r\n                    <th></th>\r\n                </StyledRow>\r\n            </thead>\r\n            \r\n            <tbody>\r\n                <NoDataStyle>\r\n                    <img src={envelope} alt=\"no data\" />\r\n                    <p>No data</p>\r\n                </NoDataStyle>\r\n            </tbody>\r\n        </StyledTable>\r\n      </StyledOrder>\r\n      <StyledOrder>\r\n        <p>Sell Orders</p>\r\n        <StyledTable>\r\n            <thead>\r\n                <StyledRow>\r\n                    <th>Security</th>\r\n                    <th>Qty</th>\r\n                    <th>Offer price</th>\r\n                    <th></th>\r\n                </StyledRow>\r\n            </thead>\r\n            \r\n            <tbody>\r\n                <NoDataStyle>\r\n                    <img src={envelope} alt=\"no data\" />\r\n                    <p>No data</p>\r\n                </NoDataStyle>\r\n            </tbody>\r\n        </StyledTable>\r\n      </StyledOrder>\r\n    </StyledAllOrder>\r\n  );\r\n}\r\n\r\nexport function Sprl() {\r\n    return (\r\n    <StyledAllOrder>\r\n      <StyledOrder>\r\n        <p>Buy Orders</p>\r\n        <StyledTable>\r\n            <thead>\r\n                <StyledRow>\r\n                    <th>Security</th>\r\n                    <th>Qty</th>\r\n                    <th>Bid price</th>\r\n                    <th></th>\r\n                </StyledRow>\r\n            </thead>\r\n            \r\n            <tbody>\r\n                {sprlBuy.map((data) => (\r\n                <BuyCard key={data.id} data={data} />\r\n                ))}\r\n            </tbody>\r\n        </StyledTable>\r\n      </StyledOrder>\r\n      <StyledOrder>\r\n        <p>Sell Orders</p>\r\n        <StyledTable>\r\n            <thead>\r\n                <StyledRow>\r\n                    <th>Security</th>\r\n                    <th>Qty</th>\r\n                    <th>Offer price</th>\r\n                    <th></th>\r\n                </StyledRow>\r\n            </thead>\r\n            \r\n            <tbody>\r\n                {sprlSell.map((data) => (\r\n                <SellCard key={data.id} data={data} />\r\n                ))}\r\n            </tbody>\r\n        </StyledTable>\r\n      </StyledOrder>\r\n    </StyledAllOrder>\r\n  );\r\n}\r\n\r\nexport function Scoc() {\r\n  return (\r\n    <StyledAllOrder>\r\n      <StyledOrder>\r\n        <p>Buy Orders</p>\r\n        <StyledTable>\r\n            <thead>\r\n                <StyledRow>\r\n                    <th>Security</th>\r\n                    <th>Qty</th>\r\n                    <th>Bid price</th>\r\n                    <th></th>\r\n                </StyledRow>\r\n            </thead>\r\n            \r\n            <tbody>\r\n                {scocBuy.map((data) => (\r\n                    <BuyCard key={data.id} data={data} />\r\n                ))}\r\n            </tbody>\r\n        </StyledTable>\r\n      </StyledOrder>\r\n      <StyledOrder>\r\n        <p>Sell Orders</p>\r\n        <StyledTable>\r\n            <thead>\r\n                <StyledRow>\r\n                    <th>Security</th>\r\n                    <th>Qty</th>\r\n                    <th>Offer price</th>\r\n                    <th></th>\r\n                </StyledRow>\r\n            </thead>\r\n            \r\n            <tbody>\r\n                {scocSell.map((data) => (\r\n                <SellCard key={data.id} data={data} />\r\n                ))}\r\n            </tbody>\r\n        </StyledTable>\r\n      </StyledOrder>\r\n    </StyledAllOrder>\r\n  );\r\n}\r\n\r\nexport function Fetc() {\r\n    return (\r\n    <StyledAllOrder>\r\n        <StyledOrder>\r\n            <p>Buy Orders</p>\r\n            <StyledTable>\r\n                <thead>\r\n                    <StyledRow>\r\n                        <th>Security</th>\r\n                        <th>Qty</th>\r\n                        <th>Bid price</th>\r\n                        <th></th>\r\n                    </StyledRow>\r\n                </thead>\r\n\r\n                <tbody>\r\n                    {fetcBuy.map((data) => (\r\n                    <BuyCard key={data.id} data={data} />\r\n                    ))}\r\n                </tbody>\r\n            </StyledTable>\r\n        </StyledOrder>\r\n        <StyledOrder>\r\n            <p>Sell Orders</p>\r\n            <StyledTable>\r\n                <thead>\r\n                    <StyledRow>\r\n                        <th>Security</th>\r\n                        <th>Qty</th>\r\n                        <th>Offer price</th>\r\n                        <th></th>\r\n                    </StyledRow>\r\n                </thead>\r\n                \r\n                <tbody>\r\n                    {fetcSell.map((data) => (\r\n                    <SellCard key={data.id} data={data} />\r\n                    ))}\r\n                </tbody>\r\n            </StyledTable>\r\n        </StyledOrder>\r\n    </StyledAllOrder>\r\n    );\r\n}\r\n",["41","42"],"C:\\Users\\HP\\Desktop\\iCode\\afex-challenge\\client\\src\\components\\order\\card.js",[],"C:\\Users\\HP\\Desktop\\iCode\\afex-challenge\\client\\src\\data\\data.js",[],"C:\\Users\\HP\\Desktop\\iCode\\afex-challenge\\client\\src\\components\\order\\styles.js",[],"C:\\Users\\HP\\Desktop\\iCode\\afex-challenge\\client\\src\\components\\trade\\trade.js",["43"],"C:\\Users\\HP\\Desktop\\iCode\\afex-challenge\\client\\src\\components\\trade\\styles.js",[],"C:\\Users\\HP\\Desktop\\iCode\\afex-challenge\\client\\src\\index.js",[],{"ruleId":"44","severity":1,"message":"45","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":17,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-global-assign","no-unsafe-negation"]